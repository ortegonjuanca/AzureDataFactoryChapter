{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "jcoa-adf"
		},
		"AzureDataLakeStorage_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage'"
		},
		"AzureDataLakeStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://jcoast.dfs.core.windows.net/"
		},
		"StorageEventTrigger_properties_PipelineFullName_parameters_triggeringFile": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"StorageEventTrigger_properties_PipelineFullName_parameters_triggeringFolder": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"StorageEventTrigger_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/e2f02d95-fd68-450b-8494-b1bed38c1aec/resourceGroups/jcoa-rg/providers/Microsoft.Storage/storageAccounts/jcoast"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"containerName": {
						"type": "String"
					},
					"fileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().containerName",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlowFullName')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Parquet",
								"type": "DatasetReference"
							},
							"name": "Source"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Parquet",
								"type": "DatasetReference"
							},
							"name": "Sink"
						}
					],
					"transformations": [
						{
							"name": "fullNameColumn"
						}
					],
					"scriptLines": [
						"parameters{",
						"     outputFileName as string",
						"}",
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> Source",
						"Source derive(full_name = toString(byName(\"name\")) + \" \" + toString(byName(\"first_surname\")) + \" \" + toString(byName(\"second_surname\"))) ~> fullNameColumn",
						"fullNameColumn sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     partitionFileNames:[($outputFileName)],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> Sink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PipelineFullName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Set Output FileName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DataFlowFullName",
								"type": "DataFlowReference",
								"parameters": {
									"outputFileName": {
										"value": "'@{variables('outputFileName')}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"Source": {
										"containerName": {
											"value": "@pipeline().parameters.triggeringFolder",
											"type": "Expression"
										},
										"fileName": {
											"value": "@pipeline().parameters.triggeringFile",
											"type": "Expression"
										}
									},
									"Sink": {
										"containerName": "silver",
										"fileName": "personal_data_full_name.parquet"
									}
								},
								"linkedServiceParameters": {}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Set Output FileName",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "outputFileName",
							"value": "personal_data_full_name.parquet"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"triggeringFile": {
						"type": "string"
					},
					"triggeringFolder": {
						"type": "string"
					}
				},
				"variables": {
					"fileName": {
						"type": "String"
					},
					"outputFileName": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DataFlowFullName')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/StorageEventTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PipelineFullName",
							"type": "PipelineReference"
						},
						"parameters": {
							"triggeringFile": "[parameters('StorageEventTrigger_properties_PipelineFullName_parameters_triggeringFile')]",
							"triggeringFolder": "[parameters('StorageEventTrigger_properties_PipelineFullName_parameters_triggeringFolder')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/bronze/blobs/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('StorageEventTrigger_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PipelineFullName')]"
			]
		}
	]
}